# Винни-Пух считает, что ритм есть, если число слогов
# (т.е. число гласных букв) в каждой фразе стихотворения одинаковое. Фраза может состоять из одного слова,
# если во фразе несколько слов, то они разделяются дефисами. Фразы отделяются друг от друга пробелами.
# Стихотворение Винни-Пух вбивает в программу с клавиатуры. В ответе напишите “Парам пам-пам”,
# если с ритмом все в порядке и “Пам парам”, если с ритмом все не в порядке
# Пример:
# **Ввод:** пара-ра-рам рам-пам-папам па-ра-па-да    
# **Вывод:** Парам пам-пам

# #song = 'па-ра-па-да'#input()

# # song_split = song.split()
# # glass = 0
# # sogl = 0
# # a = len(song_split)

# # for i in range(len(song_split)):
# #     q = list(f"{song_split[i]}")
# #     qlen = len(song_split[i])
# #     while qlen > 0:
# #         if q[i] == 'а':
# #             i+=1
# #             qlen -= 1
# #             glass +=1
# #         elif q[i] == '-':
# #             i += 1
# #             qlen -= 1
# #         else:
# #             i+=1
# #             qlen -= 1
# #             sogl+=1
# #     if glass == sogl:
# #         print('Парам пам-пам')
# #     else:
# #         print('Пам парам')
# Честно пытался сделать сам, но не вышло, не мой это язык Python, не понимаю я его.

# print(('Пам парам', 'Парам пам-пам')[len(s := set(sum(j in 'уеыаоэяиюё' for j in i)
#                                                   for i in input().split())) == 1 and s.pop() != 0])

#-----------------------------------------------------------------------------------------------------

#  Напишите функцию print_operation_table(operation, num_rows=6, num_columns=6),
# которая принимает в качестве аргумента функцию, вычисляющую элемент по номеру строки и столбца.
# Аргументы num_rows и num_columns указывают число строк и столбцов таблицы, которые должны быть распечатаны.
# Нумерация строк и столбцов идет с единицы (подумайте, почему не с нуля).
# Примечание: бинарной операцией называется любая операция, у которой ровно два аргумента, как, например,
# у операции умножения.

# def print_operation_table(operation, num_rows = 6, num_columns = 6):
#     for i in range(1, num_rows + 1):
#         for j in range(1, num_columns + 1):
#             print(f"{operation(i, j):4}", end=" ")
#         print()

# print_operation_table(lambda x, y: x * y)